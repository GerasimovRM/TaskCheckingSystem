version: '3.8'

services:
  postgres-db:
    image: postgres
    ports:
      - "${DB_EXTERNAL_PORT}:5432"
    environment:
      - POSTGRES_USER=${DB_USERNAME}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_DATABASE}
      - POSTGRES_HOST=${DB_HOST}
      - P
    volumes:  
      - ~/Volumes/postgresql:/var/lib/postgresql/data
    networks:
      - db-backend
      - backend-frontend

  postgres-db-test:
    image: postgres
    ports:
      - ${DB_TEST_EXTERNAL_PORT}:5432
    environment:
      - POSTGRES_USER=${DB_TEST_USERNAME}
      - POSTGRES_PASSWORD=${DB_TEST_PASSWORD}
      - POSTGRES_DB=${DB_TEST_DATABASE}
      - POSTGRES_HOST=${DB_TEST_HOST}
    volumes:
      - ~/Volumes/postgresql-test:/var/lib/postgresql/data

  backend:
    build: ./backend
    command: uvicorn api.server:app --host 0.0.0.0 --reload
    volumes:
      - ./backend:/code
    env_file:
      - .env
    environment:
      - DEBUG=1
    ports:
      - "${BACKEND_PORT}:8000"
    restart: on-failure
    depends_on:
      - postgres-db
    networks:
      - db-backend
      - redis-go-net
      - rabbitmq-go-net
      - backend-frontend

  frontend:
    build: 
      context: ./frontend
    env_file:
      - .env
    environment:
      - REACT_APP_PROD_SITE_URL=${REACT_APP_PROD_SITE_URL}
      - REACT_APP_DEV_SITE_URL=${REACT_APP_DEV_SITE_URL}
      - REACT_APP_PROD_API_URL=${REACT_APP_PROD_API_URL}
      - REACT_APP_DEV_API_URL=${REACT_APP_DEV_API_URL}
      - REACT_APP_PROD_VK_CLIENT_ID=${REACT_APP_PROD_VK_CLIENT_ID}
      - REACT_APP_DEV_VK_CLIENT_ID=${REACT_APP_DEV_VK_CLIENT_ID}
      - REACT_APP_SECRET=${REACT_APP_SECRET}
    ports:
      - 443:443
    volumes:
      - ./frontend:/usr/src/app
      - /usr/src/app/node_modules
    networks:
      - backend-frontend
    tty: true
    stdin_open: true
    depends_on:
      - backend

  rabbitmq:
    image: rabbitmq:3.5
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASSWORD}
    ports:
      - ${RABBITMQ_PORT}:5672
      - ${RABBITMQ_PORT_ADD}:15672
    volumes:
      - ~/Volumes/rabbitmq/data:/var/lib/rabbitmq/mnesia
      - ~/Volumes/rabbitmq/log:/var/log/rabbitmq
    networks:
      - rabbitmq-go-net

  redis:
    image: redis:7.0.4-alpine
    command: --requirepass ${REDIS_PASSWORD}
    ports:
      - ${REDIS_PORT}:6379
    volumes:
      - ~/Volumes/redis:/data
    networks:
      - redis-go-net

  celery-worker:
    build: ./backend
    env_file:
      - .env
    depends_on:
      - rabbitmq
      - redis
      - postgres-db
    volumes:
      - ./backend:/code
      - /var/run/docker.sock:/var/run/docker.sock
    command: "celery -A celery_worker.worker worker -l info -Q check-solution-queue -c 1"
    networks:
      - rabbitmq-go-net
      - redis-go-net
      - db-backend

  celery-flower:
    image: mher/flower:0.9.7
    command: ["flower", "--broker=amqp://${RABBITMQ_USER}:${RABBITMQ_PASSWORD}@rabbitmq:${RABBITMQ_PORT}//", "--port=${CELERY_FLOWER_PORT}"]
    ports:
      - "${CELERY_FLOWER_PORT}:${CELERY_FLOWER_PORT}"
    depends_on:
      - rabbitmq
      - redis
    networks:
      - rabbitmq-go-net
      - redis-go-net




networks:
  db-backend:
  backend-frontend:
  rabbitmq-go-net:
  redis-go-net:

