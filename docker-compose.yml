version: '3.8'

services:
  # https://vinybrasil.github.io/portfolio/kafkafastapiasync/
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: ${ZOOKEEPER_CLIENT_PORT}
      ZOOKEEPER_TICK_TIME: ${ZOOKEEPER_TICK_TIME}
    ports:
      - ${ZOOKEEPER_CLIENT_PORT}:${ZOOKEEPER_CLIENT_PORT}
    networks:
      zookeeper-kafka:

  # https://vinybrasil.github.io/portfolio/kafkafastapiasync/
  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - ${KAFKA_PORT}:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:${ZOOKEEPER_CLIENT_PORT}
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      zookeeper-kafka:

  postgres-db:
    image: postgres
    ports:
      - "${DB_EXTERNAL_PORT}:5432"
    environment:
      - POSTGRES_USER=${DB_USERNAME}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_DATABASE}
      - POSTGRES_HOST=${DB_HOST}
    volumes:  
      - ~/Volumes/postgresql:/var/lib/postgresql/data
    networks:
      - db-backend
      - backend-frontend

  backend:
    build: ./backend
    command: uvicorn api.server:app --host 0.0.0.0 --reload
    volumes:
      - ./backend:/code
    env_file:
      - .env
    ports:
      - "${BACKEND_PORT}:8000"
    restart: on-failure
    depends_on:
      - postgres-db
      - kafka
    networks:
      - db-backend
      - backend-frontend
      - zookeeper-kafka

  task-checker:
    build: ./TaskChecker
    command: python3 main.py
    volumes:
      - ./TaskChecker:/code
      - /var/run/docker.sock:/var/run/docker.sock
    env_file:
      - .env
    networks:
      - db-backend
      - zookeeper-kafka

  frontend:
    build: 
      context: ./frontend
    env_file:
      - .env
    environment:
      - REACT_APP_PROD_SITE_URL=${REACT_APP_PROD_SITE_URL}
      - REACT_APP_DEV_SITE_URL=${REACT_APP_DEV_SITE_URL}
      - REACT_APP_PROD_API_URL=${REACT_APP_PROD_API_URL}
      - REACT_APP_DEV_API_URL=${REACT_APP_DEV_API_URL}
      - REACT_APP_PROD_VK_CLIENT_ID=${REACT_APP_PROD_VK_CLIENT_ID}
      - REACT_APP_DEV_VK_CLIENT_ID=${REACT_APP_DEV_VK_CLIENT_ID}
      - REACT_APP_SECRET=${REACT_APP_SECRET}
    ports:
      - 10443:443
    volumes:
      - ./frontend:/usr/src/app
      - /usr/src/app/node_modules
    networks:
      - backend-frontend
      - frontend-services
    tty: true
    stdin_open: true
    depends_on:
      - backend
      - auth
  
  auth:
    build:
      context: ./auth-frontend
    ports:
      - 3340:3340
    stdin_open: true
    networks:
      - frontend-services

networks:
  db-backend:
  backend-frontend:
  frontend-services:
  zookeeper-kafka:
